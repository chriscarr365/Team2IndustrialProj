# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
<<<<<<< Updated upstream

#     - name: Setup Test MySQL Db
#       uses: mirromutth/mysql-action@v1.1
#       with:
#         mysql root password: ${{ secrets.MYSQL_TEST_PASS }}
#         mysql database: ${{ secrets.MYSQL_TEST_DB }}
#         mysql user: ${{ secrets.MYSQL_TEST_USER }}
#         mysql password: ${{ secrets.MYSQL_TEST_USER_PASS }} 
    
=======
          
>>>>>>> Stashed changes
    - name: Setup Dependencies
      working-directory: ./api
      run: npm install

    - name: Run Test
      working-directory: ./api
      run: npm run test
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      working-directory: ./api
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: team2ip
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
